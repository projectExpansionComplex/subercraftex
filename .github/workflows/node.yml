name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker images
      run: |
        docker build -t my-backend -f docker/Dockerfile.backend ./backend
        docker build -t my-frontend -f docker/Dockerfile.frontend ./frontend

    - name: Run Tests (Backend)
      run: |
        docker run --rm my-backend npm test

    - name: Run Tests (Frontend)
      run: |
        docker run --rm my-frontend npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-backend:${{ github.sha }} ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:${{ github.sha }}

    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-frontend:${{ github.sha }} ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend:${{ github.sha }}

    - name: Deploy to Production
      run: |
        # Deploy commands (e.g., SSH into your server and pull the latest Docker images)
        ssh user@server_ip 'docker pull ${{ secrets.DOCKER_USERNAME }}/my-backend:${{ github.sha }} && docker pull ${{ secrets.DOCKER_USERNAME }}/my-frontend:${{ github.sha }}'
