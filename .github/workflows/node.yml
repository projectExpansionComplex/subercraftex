name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker images
      run: |
        docker build -t my-backend -f docker/Dockerfile.backend ./backend
        docker build -t my-frontend -f docker/Dockerfile.frontend ./frontend

    - name: Run Tests
      run: |
        docker run --rm my-backend npm test
        docker run --rm my-frontend npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-backend:${{ github.sha }} -f docker/Dockerfile.backend ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/my-backend:${{ github.sha }}

    - name: Build and Push Frontend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-frontend:${{ github.sha }} -f docker/Dockerfile.frontend ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/my-frontend:${{ github.sha }}